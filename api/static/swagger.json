{
    "swagger": "2.0",
    "info": {
      "description": "SendIT is a courier service that helps users deliver parcels to different destinations.",
      "version": 1,
      "title": "SendIT API Documentation",
      "contact": {
        "email": "ecmugenyi@gmail.com"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
    },
    "host": "127.0.0.1:5000",
    "basePath": "/api/v1/",
    "tags": [
      {
        "name": "user",
        "description": "Operations about user",
        "externalDocs": {
          "description": "Find out more about our store",
          "url": "http://swagger.io"
        }
      },
      {
        "name": "parcel",
        "description": "Everything about Parcel delivery orders",
        "externalDocs": {
          "description": "Find out more",
          "url": "http://swagger.io"
        }
      }
    ],
    "paths": {
      "/auth/login": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "Login a user",
          "description": "",
          "operationId": "loginUser",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Login user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UserLogin"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/auth/signup": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "Create a user account.",
          "description": "",
          "operationId": "createUser",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Created user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UserSignUp"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/parcels": {
        "post": {
          "tags": [
            "parcel"
          ],
          "summary": "Create a parcel delivery order",
          "description": "",
          "operationId": "createParcel",
          "consumes": [
            "application/json",
            "application/xml"
          ],
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Parcel object that needs to be created",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CreateParcel"
              }
            }
          ],
          "responses": {
            "405": {
              "description": "Invalid input"
            }
          },
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ]
        },
        "get": {
          "tags": [
            "parcel"
          ],
          "summary": "Fetch all parcel delivery orders",
          "description": "",
          "operationId": "fetchParcels",
          "consumes": [
            "application/json",
            "application/xml"
          ],
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Pet object that needs to be added to the store",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Parcel"
              }
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Pet not found"
            },
            "405": {
              "description": "Validation exception"
            }
          },
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ]
        }
      },
      "/parcels/parcelId": {
        "get": {
          "tags": [
            "parcel"
          ],
          "summary": "Fetch a specific delivery order",
          "description": "",
          "operationId": "findSpecificParcel",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "name": "status",
              "in": "query",
              "description": "Status values that need to be considered for filter",
              "required": true,
              "schema": {}
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Pet"
                }
              }
            },
            "400": {
              "description": "Invalid status value"
            }
          },
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ]
        }
      },
      "/users/{userId}/parcels": {
        "get": {
          "tags": [
            "parcel"
          ],
          "summary": "Finds Pets by tags",
          "description": "Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
          "operationId": "findPetsByTags",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "name": "tags",
              "in": "query",
              "description": "Tags to filter by",
              "required": true,
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Pet"
                }
              }
            },
            "400": {
              "description": "Invalid tag value"
            }
          },
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "deprecated": true
        }
      },
      "/parcels/{parcelId}/cancel": {
        "patch": {
          "tags": [
            "parcel"
          ],
          "summary": "Deletes a pet",
          "description": "",
          "operationId": "deletePet",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "name": "api_key",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "petId",
              "in": "path",
              "description": "Pet id to delete",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Pet not found"
            }
          },
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ]
        }
      },
      "/parcels/{parcelId}/destination": {
        "patch": {
          "tags": [
            "parcel"
          ],
          "summary": "Creates list of users with given input array",
          "description": "",
          "operationId": "createUsersWithListInput",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "List of user object",
              "required": true,
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/parcels/{parcelId}/status": {
        "patch": {
          "tags": [
            "parcel"
          ],
          "summary": "Logs user into the system",
          "description": "",
          "operationId": "loginUser",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "name": "username",
              "in": "query",
              "description": "The user name for login",
              "required": true,
              "type": "string"
            },
            {
              "name": "password",
              "in": "query",
              "description": "The password for login in clear text",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "string"
              },
              "headers": {
                "X-Rate-Limit": {
                  "type": "integer",
                  "format": "int32",
                  "description": "calls per hour allowed by the user"
                },
                "X-Expires-After": {
                  "type": "string",
                  "format": "date-time",
                  "description": "date in UTC when token expires"
                }
              }
            },
            "400": {
              "description": "Invalid username/password supplied"
            }
          }
        }
      },
      "/parcels/{parcelId}/currentlocation": {
        "patch": {
          "tags": [
            "parcel"
          ],
          "summary": "Logs out current logged in user session",
          "description": "",
          "operationId": "logoutUser",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      }
    },
    "securityDefinitions": {
      "petstore_auth": {
        "type": "oauth2",
        "authorizationUrl": "https://petstore.swagger.io/oauth/dialog",
        "flow": "implicit",
        "scopes": {
          "write:pets": "modify pets in your account",
          "read:pets": "read your pets"
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "othernames": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "registered": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "isadmin": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "UserSignUp": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "othernames": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "isadmin": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Parcel": {
        "type": "object",
        "required": [
          "placedby",
          "weight",
          "weightmetric",
          "to",
          "from"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "placedBy": {
            "type": "integer",
            "format": "int64"
          },
          "weight": {
            "type": "number"
          },
          "weightmetric": {
            "type": "string",
            "example": "Kg"
          },
          "sentOn": {
            "type": "string"
          },
          "deliveredOn": {
            "type": "string"
          },
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "currentlocation": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "description": "Parcel status in the store",
            "enum": [
              "placed",
              "transiting",
              "delivered"
            ]
          },
          "isCanceled": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "Parcel"
        }
      },
      "CreateParcel": {
        "type": "object",
        "required": [
          "placedby",
          "weight",
          "weightmetric",
          "to",
          "from"
        ],
        "properties": {
          "placedBy": {
            "type": "integer",
            "format": "int64"
          },
          "weight": {
            "type": "number"
          },
          "weightmetric": {
            "type": "string",
            "example": "Kg"
          },
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Parcel"
        }
      }
    }
  }